Functions and files we have created and modified

Crazyflie firmware files modified
consoleComm.c
    droneCommSendMessage - this function sends the message we have
constructed to be sent and returns true if succesful and false oterwise.
    droneCommTest- returns whether or not it was initialized
    droneCommPutcharFromISR - has a check for whether or not the CRTPPacket
is past the max data size. If it isn't, it will add it to the current message
set to be printed. If not it will do nothing.
    droneCommTask - Continuously loops to see if any messages arrive on channnel
0. It sends a message back to the server "got messafe frim pc: " then relays the
same message back. We use this for some extra functionality by sending the ~
character before any message sent from the PC. We then relay back a message
"1! Sending to beacon; port,message:" and then relay said message to one of the
LPS beacons.
lpsTWRTag.h
    We have defined 2 new constants to be used for switch statements.
LPS_TWR_RELAY_D2B and LPS_TWR_RELAY_B2D.

lpsTWRTag.c


beaconComm.c
    TestMsg - a test function that just sends to the console, "TWR init success!
beacons online"
    beaconCommSendMeassage - sends current message to beacon and relays back to
the console "2! this msg sent to beacon:" followed by the message sent to the
beacon.
    beaconCommInit - sets messageLength to 2 and sets both bits of the message
to be LPS_TWR_DRELAY_D2B. It then calls testMSG
   We have the same putchar functions as in consoleComm that act basically the
same.
    beaconAnalyzePayload - sends back to the console "5! recieved msg from
beacon:" followed by the data recieved from the beacon.

LPS Firmware modified

Python code modified
